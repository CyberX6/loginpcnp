{"version":3,"sources":["views/forms/form-elements/number-input/NumberInputSize.js","views/forms/form-elements/number-input/NumberInputBasic.js","views/forms/form-elements/number-input/NumberInputMinMax.js","views/forms/form-elements/number-input/NumberInputFormat.js","views/forms/form-elements/number-input/NumberInputColors.js","views/forms/form-elements/number-input/NumberInputDecimal.js","views/forms/form-elements/number-input/NumberInputControlled.js","views/forms/form-elements/number-input/index.js","@core/components/breadcrumbs/index.js"],"names":["NumberInputSize","tag","className","for","defaultValue","upHandler","id","downHandler","NumberInputBasic","disabled","readOnly","NumberInputMinMax","min","max","NumberInputFormat","parser","num","cells","toString","split","replace","formatter","colors","NumberInputColors","map","color","NumberInputDecimal","step","NumberInputControlled","useState","value","setValue","isDisabled","setIsDisabled","isReadOnly","setIsReadOnly","onChange","size","onClick","NumberInput","breadCrumbTitle","breadCrumbParent","breadCrumbActive","md","sm","xs","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","active","end","Link"],"mappings":"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","file":"static/js/135.a357e66e.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputSize = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Sizes</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='d-flex flex-wrap'>\r\n          <div className='me-2'>\r\n            <Label className='form-label' for='lg-number-input'>\r\n              Large Input\r\n            </Label>\r\n            <InputNumber\r\n              defaultValue={10}\r\n              className='input-lg'\r\n              upHandler={<Plus />}\r\n              id='lg-number-input'\r\n              downHandler={<Minus />}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Label className='form-label' for='default-number-input'>\r\n              Default Input\r\n            </Label>\r\n            <InputNumber defaultValue={10} upHandler={<Plus />} id='default-number-input' downHandler={<Minus />} />\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputSize\r\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputBasic = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <div>\n            <Label className='form-label' for='basic-number-input'>\n              Basic Input\n            </Label>\n            <InputNumber id='basic-number-input' defaultValue={10} upHandler={<Plus />} downHandler={<Minus />} />\n          </div>\n          <div>\n            <Label className='form-label' for='disabled-number-input'>\n              Disabled Input\n            </Label>\n            <InputNumber\n              disabled\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='disabled-number-input'\n            />\n          </div>\n          <div>\n            <Label className='form-label' for='readOnly-number-input'>\n              ReadOnly Input\n            </Label>\n            <InputNumber\n              readOnly\n              defaultValue={10}\n              upHandler={<Plus />}\n              downHandler={<Minus />}\n              id='readOnly-number-input'\n            />\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputBasic\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputMinMax = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Min Max</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='min-max-number-input'>\n            Min Max Input\n          </Label>\n          <InputNumber\n            min={0}\n            max={10}\n            defaultValue={5}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='min-max-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputMinMax\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputFormat = () => {\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n\n  const format = num => {\n    return `$ ${numberWithCommas(num)}`\n  }\n\n  const parser = num => {\n    const cells = num.toString().split(' ')\n    if (!cells[1]) {\n      return num\n    }\n\n    const parsed = cells[1].replace(/,*/g, '')\n\n    return parsed\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Formatting</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='formatting-number-input'>\n            Formatting Input\n          </Label>\n          <InputNumber\n            parser={parser}\n            defaultValue={5}\n            formatter={format}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='formatting-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputFormat\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info']\n\nconst NumberInputColors = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Colors</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          {colors.map(color => (\n            <div key={color}>\n              <Label className='form-label text-capitalize' for={`${color}-number-input`}>\n                {color} Input\n              </Label>\n              <InputNumber\n                defaultValue={10}\n                upHandler={<Plus />}\n                downHandler={<Minus />}\n                id={`${color}-number-input`}\n                className={`input-${color}`}\n              />\n            </div>\n          ))}\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputColors\n","// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\n\nconst NumberInputDecimal = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Decimal</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='decimal-number-input'>\n            Decimal Input\n          </Label>\n          <InputNumber\n            step={0.1}\n            defaultValue={10}\n            upHandler={<Plus />}\n            downHandler={<Minus />}\n            id='decimal-number-input'\n          />\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputDecimal\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport { Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Label, Button } from 'reactstrap'\n\nconst NumberInputControlled = () => {\n  const [value, setValue] = useState(1)\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(false)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div>\n          <Label className='form-label' for='controlled-number-input'>\n            Controlled Input\n          </Label>\n          <InputNumber\n            value={value}\n            upHandler={<Plus />}\n            disabled={isDisabled}\n            readOnly={isReadOnly}\n            downHandler={<Minus />}\n            id='controlled-number-input'\n            onChange={value => setValue(value)}\n          />\n        </div>\n        <div className='demo-inline-spacing'>\n          <Button size='sm' color='primary' onClick={() => setIsDisabled(!isDisabled)}>\n            Toggle Disabled\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setIsReadOnly(!isReadOnly)}>\n            Toggle ReadOnly\n          </Button>\n          <Button size='sm' color='primary' onClick={() => setValue(10)}>\n            Set Value to 10\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default NumberInputControlled\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport NumberInputSize from './NumberInputSize'\nimport NumberInputBasic from './NumberInputBasic'\nimport NumberInputMinMax from './NumberInputMinMax'\nimport NumberInputFormat from './NumberInputFormat'\nimport NumberInputColors from './NumberInputColors'\nimport NumberInputDecimal from './NumberInputDecimal'\nimport NumberInputControlled from './NumberInputControlled'\n\n// ** Styles\nimport '@styles/react/libs/input-number/input-number.scss'\n\nconst NumberInput = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Number Input' breadCrumbParent='Form Elements' breadCrumbActive='Number Input' />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <NumberInputBasic />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputControlled />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputDecimal />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputMinMax />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputSize />\n        </Col>\n        <Col md='6' sm='12'>\n          <NumberInputFormat />\n        </Col>\n        <Col xs='12'>\n          <NumberInputColors />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default NumberInput\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}